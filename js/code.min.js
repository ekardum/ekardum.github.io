/*
 Code Utils - (c) Keith Clark freely distributable under the terms of the MIT license.

 twitter.com/keithclarkcouk
 www.keithclark.co.uk
*/
(function(p) {
    function m(b) {
        return b.replace(/&/g, "&amp;").replace(/</g, "&lt;")
    }

    function e(b) {
        return "<span class=code_" + b + ">"
    }

    function g() {
        return "</span>"
    }

    function b(b, d) {
        return e(b) + d + g()
    }
    var r = /<(?:(\/?[a-z-:0-9]+|!doctype|!--)?)|(?:--)?>|([a-z0-9-:]+=)(("[^"]*")|('[^']*'))/gi,
        t = /((?:"(?:\\.|[^"\\])*")|(?:'(?:\\.|[^'\\])*'))|((?:\/\/[^\n]*)|(?:\/\*[^*]*\*+(?:[^\/][^*]*\*+)*\/))|\b(break|case|catch|continue|default|delete|do|else|finally|for|function|if|in|new|return|switch|throw|try|var|let|const|while|with|typeof)\b|(\/(?:\\[\/\\]|[^*\/])(?:\\.|[^\/\n\\])*\/(?!\/)[gim]*)|(true|false|[+-]?\.?\b(?:\d*\.)?\d+)|(<|>|&|[-+*\/=\[\]{}(),&|!?:;<>%.])|\b(([A-Z][a-z0-9_]*)(?=\.))/g,
        u = /((?:"(?:\\.|[^"\\])*")|(?:'(?:\\.|[^'\\])*'))|((?:\b(?:red|orange|yellow|green|blue)\b)|(?:#[0-9a-f]{6}\b)|(?:#[0-9a-f]{3}\b)|(?:rgba?\(.*?\)))|([:;{},()]|\/\*|\*\/|@(keyframes|media|supports)[^{]+{)|@(import|font-face|charset)|(\b(?:var|calc|(conic|radial|linear)-gradient|url|local|attr|((rotate|scale|translate)([XYZ]|3d)?)))/g;
    p.CodeUtils = {
        colorMixed: function(b) {
            var d = [];
            return CodeUtils.colorHTML(b.replace(/(<(style|script)[\w\W]*?>)([\w\W]*?)(<\/\2>)/g, function(b, a, e, l, g) {
                "script" === e ? d.push({
                    type: "js",
                    source: CodeUtils.colorJS(l)
                }) : d.push({
                    type: "css",
                    source: CodeUtils.colorCSS(l)
                });
                return a + "\ufffe" + (d.length - 1) + "\uffff" + g
            })).replace(/\ufffe(\d+)\uffff/g, function(b, a) {
                return '<span class="code code--' + d[a].type + '">' + d[a].source + "</span>"
            })
        },
        colorHTML: function(k) {
            var d = !1,
                f = !1;
            return k.replace(r, function(a, n, l, k) {
                "!--" != n || f ? n && !f ? (d = !0, a = e("!" == n[0] ? "dtd" : "tag") + m(a)) : ">" != a || f ? "--\x3e" == a && f ? (f = !1, a += g()) : a = l && k && d ? b("property", l) + b("string", k) : m(a) : (d = !1, a += g()) : (f = !0, a = e("comment") + m(a));
                return a
            })
        },
        colorJS: function(e) {
            return e.replace(t, function(d, f, a, e, g, k, m, q) {
                var h;
                f ? h = "string" : a ? h = "comment" : e ? h = "keyword" : g ? h = "regex" : q ? h = "object" : k ? h = "number" : m && (h = "punc");
                return h ? b(h, d) : d
            })
        },
        colorCSS: function(k) {
            var d = !1,
                f = !1;
            return k.replace(u, function(a, k, l, m, p, q, h) {
                if (d) "*/" == a && (d = !1, a += g());
                else if (l) a = "<span class='code_color' style='background:" + l + "''></span>" + a.replace(/[(),]/g, function(a) {
                    return b("punc", a[0])
                });
                else if (k) a = b("string", a);
                else if ("/*" == a) d = !0, a = e("comment") + a;
                else if (h) a = b("property",
                    h);
                else if ("{" == a && !f) f = !0, a = b("punc", a) + e("property");
                else if (":" == a && f) a = g() + b("punc", a) + e("value");
                else if (";" == a && f) a = g() + b("punc", a) + e("property");
                else if ("}" == a && f) f = !1, a = g() + b("punc", a);
                else if ("@" == a.charAt(0)) a = "{" !== a.substr(-1) ? e("atblock") + a + g() : e("atblock") + a.substring(0, a.length - 1).replace(/[(:)]/g, function(a) {
                    return b("punc", a)
                }) + g() + b("punc", a.substr(-1));
                else if (")" == a || "(" == a || "}" == a || "," == a || ";" == a) a = b("punc", a);
                return a
            })
        }
    }
})(this);
for (var languages = {
        html: CodeUtils.colorMixed,
        php: CodeUtils.colorJS,
        js: CodeUtils.colorJS,
        css: CodeUtils.colorCSS
    }, codeBlocks = document.querySelectorAll("code[class^='code code--']"), c = 0; c < codeBlocks.length; c++) {
    var block = codeBlocks[c],
        language = languages[block.className.substring(11)];
    language && (block.innerHTML = language(block.innerText), 2E3 < block.scrollWidth && (block.className += " pre-wrap"))
};